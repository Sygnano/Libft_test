# - Try to find Flex
# Once done this will define
#
#  FLEX_FOUND - system has Flex
#  FLEX_EXECUTABLE - path of the flex executable
#  FLEX_VERSION - the version string, like "2.5.31"
#

find_program(FLEX_EXECUTABLE NAMES flex)

if(FLEX_EXECUTABLE)
    set(FLEX_FOUND TRUE)

    execute_process(COMMAND ${FLEX_EXECUTABLE} --version
        OUTPUT_VARIABLE _FLEX_VERSION
    )
    string(REGEX MATCH "[0-9]+\\.[0-9]+\\.[0-9]+" FLEX_VERSION "${_FLEX_VERSION}")
endif()

if(FLEX_FOUND)
    message(STATUS "Found Flex: ${FLEX_EXECUTABLE}")
else()
    if(FLEX_FIND_REQUIRED)
        message(FATAL_ERROR "Could not find Flex")
    endif()
endif()

macro(flex_generator _L_INPUT _C_OUTPUT _H_OUTPUT)
    if(FLEX_EXECUTABLE)
        add_custom_command(
            OUTPUT  "${CMAKE_CURRENT_SOURCE_DIR}/${_C_OUTPUT}"
            OUTPUT  "${CMAKE_CURRENT_SOURCE_DIR}/${_H_OUTPUT}"
            DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/${_L_INPUT}"
            COMMENT "Generating scanner from ${_L_INPUT}"
            COMMAND ${FLEX_EXECUTABLE}
            ARGS
                --outfile="${_C_OUTPUT}"
                --header-file="${_H_OUTPUT}"
                ${_L_INPUT}
            WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
        )
        set_source_files_properties(
            "${CMAKE_CURRENT_SOURCE_DIR}/${_C_OUTPUT}"
            "${CMAKE_CURRENT_SOURCE_DIR}/${_H_OUTPUT}"
            GENERATED
        )
    else()
        message(SEND_ERROR "Can't find flex program, and it's required")
    endif()
endmacro()