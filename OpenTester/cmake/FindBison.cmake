# - Try to find Bison
# Once done this will define
#
#  BISON_FOUND - system has Bison
#  BISON_EXECUTABLE - path of the bison executable
#  BISON_VERSION - the version string, like "2.5.31"
#

find_program(BISON_EXECUTABLE NAMES bison)

if(BISON_EXECUTABLE)
    set(BISON_FOUND TRUE)

    execute_process(COMMAND ${BISON_EXECUTABLE} --version
        OUTPUT_VARIABLE _BISON_VERSION
    )
    string(REGEX MATCH "[0-9]+\\.[0-9]+\\.[0-9]+" BISON_VERSION "${_BISON_VERSION}")
endif()

if(BISON_FOUND)
    message(STATUS "Found Bison: ${BISON_EXECUTABLE}")
else()
    if(BISON_FIND_REQUIRED)
        message(FATAL_ERROR "Could not find Bison")
    endif()
endif()

macro(bison_generator _Y_INPUT _C_OUTPUT _H_OUTPUT)
    if(BISON_EXECUTABLE)
        add_custom_command(
            OUTPUT  "${CMAKE_CURRENT_SOURCE_DIR}/${_C_OUTPUT}"
            OUTPUT  "${CMAKE_CURRENT_SOURCE_DIR}/${_H_OUTPUT}"
            DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/${_Y_INPUT}"
            COMMENT "Generating parser from ${_Y_INPUT}"
            COMMAND ${BISON_EXECUTABLE}
            ARGS
                --output="${_C_OUTPUT}"
                --defines="${_H_OUTPUT}"
                ${_Y_INPUT}
            WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
        )
        set_source_files_properties(
            "${CMAKE_CURRENT_SOURCE_DIR}/${_C_OUTPUT}"
            "${CMAKE_CURRENT_SOURCE_DIR}/${_H_OUTPUT}"
            GENERATED
        )
    else()
        message(SEND_ERROR "Can't find bison program, and it's required")
    endif()
endmacro()