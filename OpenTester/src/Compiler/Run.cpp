#include <cstdio>
#include <vector>
#include <string>
#include <cstdlib>
#include <dlfcn.h>
#include "Run.hpp"
#include "Plugin.hpp"

static void*
convertImage(const std::string& file)
{
	std::string image = file;
	if (file.substr(file.find_last_of('.') + 1, std::string::npos) == "a")
	{
		remove("/tmp/image.dylib");
		std::string cmd = "cc -Wl,-all_load -dynamiclib ";
		cmd += file;
		cmd += " -o /tmp/image.dylib";
		system(cmd.c_str());
		image = "/tmp/image.dylib";
	}
	return dlopen(image.c_str(), RTLD_NOW);
}

static void
runImage(const char* file)
{
	std::string path = file;
	std::string fname = path.substr(path.find_last_of('/') + 1, std::string::npos);
	std::vector<Plugin*> plugins;
	std::vector<Plugin*> activePlugins;

	Plugin::loadPlugins(plugins);
	for (auto p : plugins)
	{
		if (p->match(fname.c_str()))
			activePlugins.push_back(p);
	}

	void* handle = convertImage(path);
	if (!handle)
	{
		printf("Could not open file: %s\n", file);
		exit(1);
	}

	for (auto p : activePlugins)
		p->run(handle);
	if (activePlugins.size() == 0)
		printf("Could not find a test suite for %s\n", fname.c_str());
}

void
runCommand(int ac, char** av)
{
	if (ac != 1)
	{
		puts("usage: opentester run <file>");
		exit(1);
	}
	runImage(av[0]);
}
