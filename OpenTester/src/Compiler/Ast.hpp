#ifndef AST_HPP
#define AST_HPP

#include <vector>
#include <string>

#include "Symbol.hpp"
#include "NTest.hpp"

class Ast
{
public:
    friend class Compiler;
    
    Ast();
    void    setName(const char* name);
    void    addAuthor(const char* author);
    void    setIdentifier(const char* identifier);
    void    setDesc(const char* desc);
    void    setLang(const char* lang);
    void    addMatch(const char* match);
    void    addPrologue(const char* prologue);
    void    addSymbol(const char* symbol);
    void    addTest(NTest* test);
    void    flush();

private:
    char*                       _name;
    std::vector<char*>          _authors;
    char*                       _identifier;
    char*                       _desc;
    char*                       _lang;
    std::vector<std::string>    _match;
    std::string                 _prologue;
    std::vector<Symbol>         _symbols;
    std::vector<NTest*>         _tests;
};

#endif